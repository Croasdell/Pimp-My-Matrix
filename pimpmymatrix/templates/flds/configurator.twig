{% includeTranslations
	"Rename",
	"Delete",
	"Remove",
	"Give your tab a name."
%}

{% includeCssFile "//fonts.googleapis.com/css?family=Coming+Soon" %}

{% macro tab(tabName, tabFields) %}
	<div class="fld-tab">
		<div class="tabs">
			<div class="tab sel draggable">
				<span>{{ tabName }}</span>
				<a class="settings icon" title="{{ 'Edit'|t }}"></a>
			</div>
		</div>
		<div class="fld-tabcontent">
			{#% for field in tabFields %}
				<div class="fld-field{% if field.required %} fld-required{% endif %}" data-id="{{ field.fieldId }}">
					<a class="settings icon" title="{{ 'Edit'|t }}"></a>
					<span>{{ field.getField().name }}</span>
					<input class="id-input" type="hidden" name="fieldLayout[{{ tabName|e('url') }}][]" value="{{ field.fieldId }}">
				</div>
			{% endfor %#}
		</div>
	</div>
{% endmacro %}

<div id="pimpmymatrix-configurator" class="fieldlayoutform">

	<h2>{{ "Group your block types"|t }}</h2>

	<div class="fld-tabs">
		{% if existingBlockTypeGroups and existingBlockTypeGroups | length %}
			{% import _self as macros %}

			{% for tabName,blockTypeGroup in existingBlockTypeGroups %}
				{{ macros.tab(tabName, 'tab.getFields()') }}
			{% endfor %}
		{% endif %}
	</div>

	<div class="newtabbtn-container">
		<div class="btn add icon">{{ "New Group"|t }}</div>
	</div>

	<div class="unusedfields">
		{% set totalUnselected = 0 %}
		{#
		{% for field in group.fields %}
			{% if not fieldLayout or field.id not in fieldLayout.getFieldIds() %}
				{% set totalUnselected = totalUnselected + 1 %}
			{% endif %}
		{% endfor %}
		#}

		<div class="fld-tab unused{#% if totalUnselected == 0 %} hidden{% endif %#}">
			<div class="tabs">
				<div class="tab sel"><span>{{ "Blocks"|t }}</span></div>
			</div>
			<div class="fld-tabcontent">
				{% for blockType in blockTypes %}
					{#% set selected = fieldLayout and field.id in fieldLayout.getFieldIds() %#}
					<div class="fld-field unused{#% if selected %} hidden{% endif %#}" data-id="{{ blockType.id }}">
						<span>{{ blockType.name }}</span>
					</div>
				{% endfor %}
			</div>
		</div>

	</div>

</div>
